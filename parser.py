class Error_entry(Exception):
	pass


PARSING_TABLE = {
    "program": {
'header':header,
'identifier_list':Error_entry,
'type_':Error_entry,
'standard_type':Error_entry,
'subprogram_declarations':Error_entry,
'subprogram_declaration':Error_entry,
'subprogram_head':Error_entry,
'arguments':Error_entry,
'parameter_list':Error_entry,
'compound_statement':Error_entry,
'optional_statements':Error_entry,
'statement_list':Error_entry,
'statement':Error_entry,
'match_statement':Error_entry,
'variable':Error_entry,
'procedure_statement':Error_entry,
'expression_list':Error_entry,
'expression':Error_entry,
'simple_expression':Error_entry,
'term':Error_entry,
'factor':Error_entry,
'sign':Error_entry,
'identifier_list_':Error_entry,
'declarations':Error_entry,
'subprogram_declarations_':Error_entry,
'parameter_list_':Error_entry,
'statement_list_':Error_entry,
'expression_list_':Error_entry,
'simple_expression_':Error_entry,
'term_':Error_entry,
'relop':Error_entry,
'addop':Error_entry,
'mulop':Error_entry,
'assignop':Error_entry,
},
    "id":{
'header':Error_entry,
'identifier_list':identifier_list,
'type_':Error_entry,
'standard_type':Error_entry,
'subprogram_declarations':Error_entry,
'subprogram_declaration':Error_entry,
'subprogram_head':Error_entry,
'arguments':Error_entry,
'parameter_list':parameter_list,
'compound_statement':Error_entry,
'optional_statements':optional_statements,
'statement_list':statement_list,
'statement':Error_entry,
'match_statement':Error_entry,
'variable':variable,
'procedure_statement':procedure_statement,
'expression_list':expression_list,
'expression':expression,
'simple_expression':simple_expression,
'term':term,
'factor':factor,
'sign':Error_entry,
'identifier_list_':Error_entry,
'declarations':Error_entry,
'subprogram_declarations_':Error_entry,
'parameter_list_':Error_entry,
'statement_list_':Error_entry,
'expression_list_':Error_entry,
'simple_expression_':Error_entry,
'term_':Error_entry,
'relop':Error_entry,
'addop':Error_entry,
'mulop':Error_entry,
'assignop':Error_entry,
},
    "integer": {
'header':Error_entry,
'identifier_list':Error_entry,
'type_':type_,
'standard_type':standard_type,
'subprogram_declarations':Error_entry,
'subprogram_declaration':Error_entry,
'subprogram_head':Error_entry,
'arguments':Error_entry,
'parameter_list':Error_entry,
'compound_statement':Error_entry,
'optional_statements':Error_entry,
'statement_list':Error_entry,
'statement':Error_entry,
'match_statement':Error_entry,
'variable':Error_entry,
'procedure_statement':Error_entry,
'expression_list':Error_entry,
'expression':Error_entry,
'simple_expression':Error_entry,
'term':Error_entry,
'factor':Error_entry,
'sign':Error_entry,
'identifier_list_':Error_entry,
'declarations':Error_entry,
'subprogram_declarations_':Error_entry,
'parameter_list_':Error_entry,
'statement_list_':Error_entry,
'expression_list_':Error_entry,
'simple_expression_':Error_entry,
'term_':Error_entry,
'relop':Error_entry,
'addop':Error_entry,
'mulop':Error_entry,
'assignop':Error_entry,
},
    "boolean": {
'header':Error_entry,
'identifier_list':Error_entry,
'type_':Error_entry,
'standard_type':Error_entry,
'subprogram_declarations':Error_entry,
'subprogram_declaration':Error_entry,
'subprogram_head':Error_entry,
'arguments':Error_entry,
'parameter_list':Error_entry,
'compound_statement':Error_entry,
'optional_statements':Error_entry,
'statement_list':Error_entry,
'statement':Error_entry,
'match_statement':Error_entry,
'variable':Error_entry,
'procedure_statement':Error_entry,
'expression_list':Error_entry,
'expression':Error_entry,
'simple_expression':Error_entry,
'term':Error_entry,
'factor':Error_entry,
'sign':Error_entry,
'identifier_list_':Error_entry,
'declarations':Error_entry,
'subprogram_declarations_':Error_entry,
'parameter_list_':Error_entry,
'statement_list_':Error_entry,
'expression_list_':Error_entry,
'simple_expression_':Error_entry,
'term_':Error_entry,
'relop':Error_entry,
'addop':Error_entry,
'mulop':Error_entry,
'assignop':Error_entry,
},
    "begin": {
'header':Error_entry,
'identifier_list':Error_entry,
'type_':Error_entry,
'standard_type':Error_entry,
'subprogram_declarations':Error_entry,
'subprogram_declaration':Error_entry,
'subprogram_head':Error_entry,
'arguments':Error_entry,
'parameter_list':Error_entry,
'compound_statement':compound_statement,
'optional_statements':optional_statements,
'statement_list':Error_entry,
'statement':Error_entry,
'match_statement':Error_entry,
'variable':Error_entry,
'procedure_statement':Error_entry,
'expression_list':Error_entry,
'expression':Error_entry,
'simple_expression':Error_entry,
'term':Error_entry,
'factor':Error_entry,
'sign':Error_entry,
'identifier_list_':Error_entry,
'declarations':Error_entry,
'subprogram_declarations_':Error_entry,
'parameter_list_':Error_entry,
'statement_list_':Error_entry,
'expression_list_':Error_entry,
'simple_expression_':Error_entry,
'term_':Error_entry,
'relop':Error_entry,
'addop':Error_entry,
'mulop':Error_entry,
'assignop':Error_entry,
},
    "end": {
'header':Error_entry,
'identifier_list':Error_entry,
'type_':Error_entry,
'standard_type':Error_entry,
'subprogram_declarations':Error_entry,
'subprogram_declaration':Error_entry,
'subprogram_head':Error_entry,
'arguments':Error_entry,
'parameter_list':Error_entry,
'compound_statement':Error_entry,
'optional_statements':optional_statements,
'statement_list':Error_entry,
'statement':Error_entry,
'match_statement':Error_entry,
'variable':Error_entry,
'procedure_statement':Error_entry,
'expression_list':Error_entry,
'expression':Error_entry,
'simple_expression':Error_entry,
'term':Error_entry,
'factor':Error_entry,
'sign':Error_entry,
'identifier_list_':Error_entry,
'declarations':Error_entry,
'subprogram_declarations_':Error_entry,
'parameter_list_':Error_entry,
'statement_list_':Error_entry,
'expression_list_':Error_entry,
'simple_expression_':Error_entry,
'term_':Error_entry,
'relop':Error_entry,
'addop':Error_entry,
'mulop':Error_entry,
'assignop':Error_entry,
},
    "procedure": {
'header':Error_entry,
'identifier_list':Error_entry,
'type_':Error_entry,
'standard_type':Error_entry,
'subprogram_declarations':subprogram_declarations,
'subprogram_declaration':subprogram_declaration,
'subprogram_head':subprogram_head,
'arguments':Error_entry,
'parameter_list':Error_entry,
'compound_statement':Error_entry,
'optional_statements':Error_entry,
'statement_list':Error_entry,
'statement':Error_entry,
'match_statement':Error_entry,
'variable':Error_entry,
'procedure_statement':Error_entry,
'expression_list':Error_entry,
'expression':Error_entry,
'simple_expression':Error_entry,
'term':Error_entry,
'factor':Error_entry,
'sign':Error_entry,
'identifier_list_':Error_entry,
'declarations':Error_entry,
'subprogram_declarations_':subprogram_declarations_,
'parameter_list_':Error_entry,
'statement_list_':Error_entry,
'expression_list_':Error_entry,
'simple_expression_':Error_entry,
'term_':Error_entry,
'relop':Error_entry,
'addop':Error_entry,
'mulop':Error_entry,
'assignop':Error_entry,
},
    "function": {
'header':Error_entry,
'identifier_list':Error_entry,
'type_':Error_entry,
'standard_type':Error_entry,
'subprogram_declarations':subprogram_declarations,
'subprogram_declaration':subprogram_declaration,
'subprogram_head':subprogram_head,
'arguments':Error_entry,
'parameter_list':Error_entry,
'compound_statement':Error_entry,
'optional_statements':Error_entry,
'statement_list':Error_entry,
'statement':Error_entry,
'match_statement':Error_entry,
'variable':Error_entry,
'procedure_statement':Error_entry,
'expression_list':Error_entry,
'expression':Error_entry,
'simple_expression':Error_entry,
'term':Error_entry,
'factor':Error_entry,
'sign':Error_entry,
'identifier_list_':Error_entry,
'declarations':Error_entry,
'subprogram_declarations_':subprogram_declarations_,
'parameter_list_':Error_entry,
'statement_list_':Error_entry,
'expression_list_':Error_entry,
'simple_expression_':Error_entry,
'term_':Error_entry,
'relop':Error_entry,
'addop':Error_entry,
'mulop':Error_entry,
'assignop':Error_entry,
},
    "if": {
'header':Error_entry,
'identifier_list':Error_entry,
'type_':Error_entry,
'standard_type':Error_entry,
'subprogram_declarations':Error_entry,
'subprogram_declaration':Error_entry,
'subprogram_head':Error_entry,
'arguments':Error_entry,
'parameter_list':Error_entry,
'compound_statement':Error_entry,
'optional_statements':optional_statements,
'statement_list':Error_entry,
'statement':Error_entry,
'match_statement':Error_entry,
'variable':Error_entry,
'procedure_statement':Error_entry,
'expression_list':Error_entry,
'expression':Error_entry,
'simple_expression':Error_entry,
'term':Error_entry,
'factor':Error_entry,
'sign':Error_entry,
'identifier_list_':Error_entry,
'declarations':Error_entry,
'subprogram_declarations_':Error_entry,
'parameter_list_':Error_entry,
'statement_list_':Error_entry,
'expression_list_':Error_entry,
'simple_expression_':Error_entry,
'term_':Error_entry,
'relop':Error_entry,
'addop':Error_entry,
'mulop':Error_entry,
'assignop':Error_entry,
},
    "then": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    "else": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    "for": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    "true": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    "false": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    "do": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
"while": {
	'header':Error_entry,
'identifier_list':Error_entry,
'type_':Error_entry,
'standard_type':Error_entry,
'subprogram_declarations':Error_entry,
'subprogram_declaration':Error_entry,
'subprogram_head':Error_entry,
'arguments':Error_entry,
'parameter_list':Error_entry,
'compound_statement':Error_entry,
'optional_statements':optional_statements,
'statement_list':Error_entry,
'statement':Error_entry,
'match_statement':Error_entry,
'variable':Error_entry,
'procedure_statement':Error_entry,
'expression_list':Error_entry,
'expression':Error_entry,
'simple_expression':Error_entry,
'term':Error_entry,
'factor':Error_entry,
'sign':Error_entry,
'identifier_list_':Error_entry,
'declarations':Error_entry,
'subprogram_declarations_':Error_entry,
'parameter_list_':Error_entry,
'statement_list_':Error_entry,
'expression_list_':Error_entry,
'simple_expression_':Error_entry,
'term_':Error_entry,
'relop':Error_entry,
'addop':Error_entry,
'mulop':Error_entry,
'assignop':Error_entry,
}
,
    "write": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    "mod": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    "div": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    "read": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    "and": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    "array": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    "or": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    "not": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    "of": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    "array": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    ">=": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    "<=": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    "<": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    ">": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    "var": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    "*": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    "<>": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    ":{
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
}=": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    ";": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    ":": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    "..": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    "(": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    ")": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    "[": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    "]": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    "/": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    "+": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    "-": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    ".": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    "=": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
    "$": {
'header':,
'identifier_list':,
'type_':,
'standard_type':,
'subprogram_declarations':,
'subprogram_declaration':,
'subprogram_head':,
'arguments':,
'parameter_list':,
'compound_statement':,
'optional_statements':,
'statement_list':,
'statement':,
'match_statement':,
'variable':,
'procedure_statement':,
'expression_list':,
'expression':,
'simple_expression':,
'term':,
'factor':,
'sign':,
'identifier_list_':,
'declarations':,
'subprogram_declarations_':,
'parameter_list_':,
'statement_list_':,
'expression_list_':,
'simple_expression_':,
'term_':,
'relop':,
'addop':,
'mulop':,
'assignop':,
},
}
